"""Initial database setup

Revision ID: ede157d14e03
Revises: 
Create Date: 2025-06-06 04:43:16.879767

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ede157d14e03'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('level', sa.String(length=20), nullable=True),
    sa.Column('section', sa.String(length=1), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('surname', sa.String(length=50), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('hometown', sa.String(length=100), nullable=True),
    sa.Column('father_name', sa.String(length=100), nullable=True),
    sa.Column('mother_name', sa.String(length=100), nullable=True),
    sa.Column('guardian_name', sa.String(length=100), nullable=True),
    sa.Column('guardian_contact', sa.String(length=20), nullable=True),
    sa.Column('medical_records', sa.Text(), nullable=True),
    sa.Column('photo_path', sa.String(length=200), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('surnname', sa.String(length=50), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('hometown', sa.String(length=100), nullable=True),
    sa.Column('college_attended', sa.String(length=100), nullable=True),
    sa.Column('area_of_specialization', sa.String(length=100), nullable=True),
    sa.Column('academic_certificate', sa.String(length=100), nullable=True),
    sa.Column('academic_area_of_study', sa.String(length=100), nullable=True),
    sa.Column('academic_college', sa.String(length=100), nullable=True),
    sa.Column('professional_certificate', sa.String(length=100), nullable=True),
    sa.Column('professional_area_of_study', sa.String(length=100), nullable=True),
    sa.Column('professional_college', sa.String(length=100), nullable=True),
    sa.Column('staff_id', sa.String(length=20), nullable=True),
    sa.Column('registered_number', sa.String(length=20), nullable=True),
    sa.Column('ntc_number', sa.String(length=20), nullable=True),
    sa.Column('ssnit_number', sa.String(length=20), nullable=True),
    sa.Column('phone_number', sa.String(length=10), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=100), nullable=True),
    sa.Column('emergency_contact_number', sa.String(length=10), nullable=True),
    sa.Column('photo_path', sa.String(length=200), nullable=True),
    sa.Column('specialization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['specialization_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('ntc_number'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('registered_number'),
    sa.UniqueConstraint('ssnit_number'),
    sa.UniqueConstraint('staff_id')
    )
    op.create_table('academic_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('term', sa.String(length=20), nullable=True),
    sa.Column('year', sa.String(length=10), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('grade', sa.String(length=2), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('condition', sa.String(length=100), nullable=True),
    sa.Column('diagnosis_date', sa.Date(), nullable=True),
    sa.Column('treatment', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_subject',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'subject_id')
    )
    op.create_table('teacher_class',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('teacher_id', 'class_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher_class')
    op.drop_table('student_subject')
    op.drop_table('medical_record')
    op.drop_table('academic_record')
    op.drop_table('teacher')
    op.drop_table('student')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('subject')
    op.drop_table('class')
    # ### end Alembic commands ###
